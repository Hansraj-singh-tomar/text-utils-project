{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.jsx","index.js"],"names":["Alert","props","alert","div","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","newText","showAlert","navigator","clipboard","writeText","split","join","filter","element","length","prototypes","PropTypes","string","isRequired","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bdeb7b62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&\r\n        <div div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n};\r\n// props.alert && ... ye jo syntax hai iska mtlb ye hai ki props.alert agar null hai to aage ka code return nhi hoga code props.alert par hi ruk jayega\r\n// this happens because all the JSX will be converted to javascript calls!\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; // impt shortcut hai ye likhne ka\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n                        {/* <div className=\"d-flex\">\r\n                            <div className=\"bg-primary rounded mx-2\" onClick={() => { props.toggleMode('primary') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }} ></div>\r\n                            <div className=\"bg-danger rounded mx-2\" onClick={() => { props.toggleMode('danger') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }} ></div>\r\n                            <div className=\"bg-success rounded mx-2\" onClick={() => { props.toggleMode('success') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }} ></div>\r\n                            <div className=\"bg-warning rounded mx-2\" onClick={() => { props.toggleMode('warning') }} style={{ height: '30px', width: '30px', cursor: 'pointer' }} ></div>\r\n                        </div> */}\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                            {/* // Excercise-2 ka code */}\r\n                            {/* <input className=\"form-check-input\" onClick={() => { props.toggleMode(null) }} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Mode</label> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = { // ye btate hai ki jo props hai uska type kya hai\r\n    title: PropTypes.string.isRequired, // agar mene title=\"1234\" pass kar diya to ye prototypes mujhe error de dega ki title of type is 'number' you need to write string over here\r\n    aboutText: PropTypes.string,  // isRequired likhne par mujhe props pass karna hi padega nhi to ye error de dega agar defaultProps set hai tab error nhi dega\r\n}\r\n// Navbar.prototypes me p ko capital nhi karna hai\r\n\r\n\r\n// what is default props value\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n};\r\n// agar me title ot aboutText ki value pass na karu ya pass karna bhul jau tab ye defaultprops ki value pass ho jayegi\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    // const [text, setText] = useState(\"enter text here\");\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // wrong way to change the state\r\n    // setText(\"new text\"); // correct way to change the state\r\n    const upperCase = () => {\r\n        // console.log(\"upper case was clicked:\" + text);\r\n        let newText = text.toUpperCase();\r\n        // setText(\"you have clicked on handleUpClick\");\r\n        setText(newText);\r\n        props.showAlert(\"converted to upperCase\", \"success\");\r\n    }\r\n    const lowerCase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowerCase\", \"success\");\r\n    }\r\n    const clearText = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"text cleared\", \"success\");\r\n    }\r\n    const copyText = () => {\r\n        // var text = document.getElementById(\"mybox\");\r\n        // text.select(); // navigator.clipboard ka use kar rhe hai to hame ye do line likhne ki jarurat hi nhi hai\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"copied to Clipboard\", \"success\");\r\n    }\r\n    const extraSpaces = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces removed\", \"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"mybox\" rows=\"8\" placeholder={props.placeholder}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2\" onClick={upperCase}>convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={lowerCase}>convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={clearText}>clear text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={copyText}>copy text</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={extraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h2> Your Text Summary </h2>\r\n                <p> {text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters </p>\r\n                <p> {0.008 * text.split(\" \").length} Minutes to read </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something in the textbox above to preview it here...\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// in 1min = 125 words can read\r\n// so 1 word ke liye 1/125(0.008minute) time lagega  \r\n\r\n// state ek component ko belong karti hai\r\n// hooks - hooks are a new addition in react. they let you use state and other react features without writtting a class \r\n// hooks bina class banaye class ke feature use karne me help karta hai ","import React, { useState } from 'react'; // function base component me react ko import karne ki jarurat nhi hai\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport Alert from './components/Alert';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Routes,\r\n//   Route,\r\n//   // Link\r\n// } from \"react-router-dom\";\r\n\r\n\r\nconst App = () => {\r\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not \r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n\r\n  // Excercise second ka code hai ye\r\n\r\n  // const removeBodyClasses = () => {\r\n  //   document.body.classList.remove('bg-light');\r\n  //   document.body.classList.remove('bg-dark');\r\n  //   document.body.classList.remove('bg-danger');\r\n  //   document.body.classList.remove('bg-success');\r\n  //   document.body.classList.remove('bg-warning');\r\n  // }\r\n  // const toggleMode = (cls) => {  // cls as primary cls ka mtlb class hai \r\n  //   console.log(cls);\r\n  //   removeBodyClasses();\r\n  //   document.body.classList.add('bg-' + cls);\r\n  //   if (mode === 'light') {\r\n  //     setMode('dark');\r\n  //     document.body.style.backgroundColor = '#042743';\r\n  //     showAlert(\"Dark mode has been enabled\", \"success\");\r\n  //     // document.title = \"TextUtils - Dark Mode\"; // Dynamically title ko change karne ke liye \r\n  //     // setInterval(() => {  // jab hame apni website ko download karane ke liye bolna hota hai jo hame title par baar baar show karega \r\n  //     //   document.title = \"TextUtils is Amazing Mode\"; // ek tarah se bol sakte hai ki dhyan akarshit krane ke liye karte hai \r\n  //     // }, 2000);\r\n  //     // setInterval(() => {\r\n  //     //   document.title = \"Install TextUtils Now\";\r\n  //     // }, 1500);\r\n  //   }\r\n  //   else {\r\n  //     setMode('light');\r\n  //     document.body.style.backgroundColor = 'white';\r\n  //     showAlert(\"Light mode has been enabled\", \"success\");\r\n  //     // document.title = \"TextUtils - Light Mode\"; // Dynamically title ko change karne ke liye \r\n  //   }\r\n  // }\r\n\r\n\r\n  //   return (\r\n  //     <>\r\n  //       <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> {/* yha me basically title and aboutText type ke props pass kar rha hu*/}\r\n  //       <Alert alert={alert} />\r\n  //       <div className=\"container my-3\">\r\n  //         <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} placeholder=\"enter text here\" />\r\n  //         {/* <About /> */}\r\n  //       </div>\r\n  //     </>\r\n  //   );\r\n  // };\r\n\r\n  // yha me textForm and About  component ko ek sath nhi show kar sakta click karne par iske liye react router dom ka use karna padega\r\n\r\n  // React Router ka use kaise karenge uska code yha likhenge\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} /> {/* yha me basically title and aboutText type ke props pass kar rha hu*/}\r\n      <Alert alert={alert} />\r\n      <div className=\"container my-3\">\r\n        {/* <Routes>\r\n            <Route exact path=\"/about\" element={<About />} />\r\n\r\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} placeholder=\"enter text here\" />} />\r\n          </Routes> */}\r\n        {/* exact means vo exact path match karega /about hi hona chahiye Url me /users --> component 1 and /users/home --> component 2 me agar exact use nhi karunga to mujhe component 1 hi show hoga */}\r\n        {/* <About /> */}\r\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} placeholder=\"enter text here\" />\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n\r\n//  {/* <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} placeholder=\"enter text here\" /> */}\r\n// {/* <About /> */}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <App />,\n  // <BrowserRouter>\n  //   <App />\n  // </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}